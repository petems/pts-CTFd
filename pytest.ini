[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output configuration
addopts = 
    --strict-markers
    --strict-config
    --disable-warnings
    --tb=short
    --durations=10
    -ra
    --maxfail=5

# Parallel execution
# Use all available CPUs minus 1 for better system responsiveness
# -n logical will use logical cores (good for I/O bound tests)
# --dist=loadfile distributes entire test files to workers (better for isolation)
# --dist=loadscope distributes test scopes to workers (good for fixtures)
# For CTFd tests, loadfile is better due to database fixture scoping

# Markers for test categorization
markers =
    slow: marks tests as slow (>1 second)
    fast: marks tests as fast (<1 second) 
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    database: marks tests that require database
    api: marks API endpoint tests
    admin: marks admin interface tests
    auth: marks authentication tests
    challenges: marks challenge-related tests
    users: marks user-related tests
    teams: marks team-related tests
    
# Filtering options
filterwarnings = 
    ignore::sqlalchemy.exc.SADeprecationWarning
    ignore::sqlalchemy.exc.SAWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    error::UserWarning

# Coverage configuration (when using --cov)
# This will be used by pytest-cov plugin
# --cov=CTFd --cov-report=xml --cov-report=html --cov-context=test

# Test file patterns to ignore
# Ignore node_modules and other non-test directories
norecursedirs = 
    node_modules
    .git
    .tox
    dist
    build
    *.egg
    CTFd/uploads

# Minimum version requirements
minversion = 6.0

# Consider tests with these patterns as doctests
# doctest_optionflags = NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL

# Timeout configuration (requires pytest-timeout)
# timeout = 300
# timeout_method = thread